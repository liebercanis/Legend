//
// ********************************************************************
// * License and Disclaimer                                           *
// *                                                                  *
// * The  Geant4 software  is  copyright of the Copyright Holders  of *
// * the Geant4 Collaboration.  It is provided  under  the terms  and *
// * conditions of the Geant4 Software License,  included in the file *
// * LICENSE and available at  http://cern.ch/geant4/license .  These *
// * include a list of copyright holders.                             *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.  Please see the license in the file  LICENSE  and URL above *
// * for the full disclaimer and the limitation of liability.         *
// *                                                                  *
// * This  code  implementation is the result of  the  scientific and *
// * technical work of the GEANT4 collaboration.                      *
// * By using,  copying,  modifying or  distributing the software (or *
// * any work based  on the software)  you  agree  to acknowledge its *
// * use  in  resulting  scientific  publications,  and indicate your *
// * acceptance of all terms of the Geant4 Software license.          *
// ********************************************************************
//
// $Id$
//
/// \file PrimaryGenerator.hh
/// \brief Definition of the PrimaryGenerator class

#ifndef PrimaryGenerator_h
#define PrimaryGenerator_h 1

#include "G4VPrimaryGenerator.hh"
// #include "G4VUserPrimaryGenerator.hh"

// #include "G4GeneralParticleSource.hh"
// #include "G4ParticleGun.hh"
#include "globals.hh"

#include "TFile.h"
#include "TTree.h"
#include "TChain.h"
#include <vector>
#include <string>

// class G4ParticleGun;
class G4Event;
// class DetectorConstruction;

/// The primary generator action class with particle gum.
///
/// The default kinematic is a 6 MeV gamma, randomly distribued
/// in front of the phantom across 80% of the (X,Y) phantom size.

class PrimaryGenerator : public G4VPrimaryGenerator
{
  public:
    PrimaryGenerator();
    virtual ~PrimaryGenerator();

    // static access method
    // static const PrimaryGenerator* Instance();

    // method from the base class
    virtual void GeneratePrimaryVertex(G4Event*);

    double Distribution(double Energy, double CosTheta);

    inline double GetStartEnergy(){return start_energy; }
    inline double GetStartCosTheta(){return start_costheta; }


  private:
    TFile *inputfile;
    TTree *datatree;

   double        start_energy;    //muon start energy in surface GeV
   double        start_costheta;    //muon start angle

   std::vector<double>  *particle_energy;
   std::vector<double>  *particle_momentumX;  //GeV
   std::vector<double>  *particle_momentumY;  //GeV
   std::vector<double>  *particle_momentumZ;  //GeV
   std::vector<std::string>  *particle_name;

    int max_entries;

    // static PrimaryGenerator* fgInstance;
    G4ThreeVector particle_position;
    G4double particle_time;

    //G4ParticleGun*  fParticleGun; // pointer a to G4 gun class
};

//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......

#endif


